{
  "log": {
    "level": "info",
    "timestamp": true
  },
  "experimental": {
    "clash_api": {
      "external_controller": "127.0.0.1:9090",
      "external_ui": "ui",
      "secret": "",
      "external_ui_download_url": "https://gh-proxy.com/https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip",
      "external_ui_download_detour": "direct",
      "default_mode": "rule"
    },
    "cache_file": {
      "enabled": true,
      "store_fakeip": true
    }
  },
  "dns": {
    "servers": [
      {
        "tag": "proxyDns", 
        "address": "tls://8.8.8.8",
        "detour": "🚀 节点选择" 
      },
      {
        "tag": "localDns",
        "address": "https://223.5.5.5/dns-query",
        "detour": "direct"
      },
      {
        "tag": "blockDns",
        "address": "rcode://success"
      }
    ],
    "rules": [
      {
        "rule_set": ["geosite-cn", "cn"],
        "server": "localDns"
      },
      {
        "rule_set": "ads",
        "server": "blockDns"
      },
      {
        "clash_mode": "global",
        "server": "proxyDns"
      },
      {
        "clash_mode": "direct",
        "server": "localDns"
      }
    ],
    "final": "proxyDns",
    "strategy": "ipv4_only",
    "fakeip": {
      "enabled": true,
      "inet4_range": "198.18.0.0/15"
    }
  },
  "inbounds": [
    {
      "tag": "tun-in",
      "type": "tun",
      "inet4_address": "198.18.0.1/15",
      "stack": "gvisor",
      "auto_route": true,
      "strict_route": true,
      "sniff": true
    },
    {
      "tag": "mixed-in",
      "type": "mixed",
      "listen": "127.0.0.1",
      "listen_port": 2080,
      "sniff": true
    }
  ],
  "outbounds": [
    { "tag": "🚀 节点选择", "type": "selector", "outbounds": [ "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "📈 网络测试", "type": "selector", "outbounds": ["🎯 全球直连",  "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "🤖 人工智能", "type": "selector", "outbounds": ["🚀 节点选择",  "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "🎮 游戏服务", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "Ⓜ️ 微软服务", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "🧱 谷歌服务", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "🍎 苹果服务", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "🎥 奈飞视频", "type": "selector", "outbounds": ["🚀 节点选择", "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "📽️ 迪士尼+", "type": "selector", "outbounds": ["🚀 节点选择", "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "📹 油管视频", "type": "selector", "outbounds": ["🚀 节点选择", "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "🎵 TikTok", "type": "selector", "outbounds": ["🚀 节点选择", "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"] },
    { "tag": "❤️ Emby公益服","type": "selector","outbounds": ["🚀 节点选择", "🎯 全球直连", "🇭🇰 香港节点", "🇹🇼 台湾节点", "🇯🇵 日本节点", "🇰🇷 韩国节点", "🇸🇬 新加坡节点", "🇺🇸 美国节点"]},
    { "tag": "📺 哔哩哔哩", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "🇨🇳 直连域名", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "🇨🇳 直连 IP", "type": "selector", "outbounds": ["🎯 全球直连", "🚀 节点选择"] },
    { "tag": "🪜 代理域名", "type": "selector", "outbounds": ["🚀 节点选择", "🎯 全球直连"] },
    { "tag": "📲 电报消息", "type": "selector", "outbounds": ["🚀 节点选择"] },
    { "tag": "🖥️ 直连软件", "type": "selector", "outbounds": ["🎯 全球直连"] },
    { "tag": "🔒 私有网络", "type": "selector", "outbounds": ["🎯 全球直连"] },
    { "tag": "🛑 广告拦截", "type": "selector", "outbounds": ["block"] },
    { "tag": "🎯 全球直连", "type": "selector", "outbounds": ["direct"] },
    { "tag": "🐟 漏网之鱼", "type": "selector", "outbounds": ["🚀 节点选择", "🎯 全球直连"] },
    { "tag": "block", "type": "block" },
    { "tag": "direct", "type": "direct" },
    { "tag": "dns-out", "type": "dns" }
  ],
  "route": {
    "auto_detect_interface": true,
    "final": "🐟 漏网之鱼",
    "rules": [
      {
        "outbound": "dns-out",
        "protocol": "dns"
      },
      {
        "rule_set": "fakeip-filter",
        "outbound": "🚀 节点选择"
      },
      {
        "clash_mode": "direct",
        "outbound": "🎯 全球直连"
      },
      {
        "clash_mode": "global",
        "outbound": "🚀 节点选择"
      },
      {
        "geosite": "category-ads-all",
        "outbound": "block"
      },
      {
        "geoip": ["cn", "private"],
        "outbound": "🎯 全球直连"
      },
      {
        "geosite": "cn",
        "outbound": "🎯 全球直连"
      },
      { "rule_set": ["ads"], "outbound": "🛑 广告拦截" },
      { "rule_set": ["applications"], "outbound": "🖥️ 直连软件" },
      { "rule_set": ["private", "privateip"], "outbound": "🔒 私有网络" },
      { "rule_set": ["microsoft-cn"], "outbound": "Ⓜ️ 微软服务" },
      { "rule_set": ["apple-cn"], "outbound": "🍎 苹果服务" },
      { "rule_set": ["google-cn"], "outbound": "🧱 谷歌服务" },
      { "rule_set": ["games-cn"], "outbound": "🎮 游戏服务" },
      { "rule_set": ["netflix", "netflixip"], "outbound": "🎥 奈飞视频" },
      { "rule_set": ["disney"], "outbound": "📽️ 迪士尼+" },
      { "rule_set": ["youtube"], "outbound": "📹 油管视频" },
      { "rule_set": ["tiktok"], "outbound": "🎵 TikTok" },
      { "rule_set": ["bilibili"], "outbound": "📺 哔哩哔哩" },
      { "rule_set": ["ai"], "outbound": "🤖 人工智能" },
      { "rule_set": ["networktest"], "outbound": "📈 网络测试" },
      { "rule_set": ["proxy"], "outbound": "🪜 代理域名" },
      { "rule_set": ["cn", "cnip"], "outbound": "🇨🇳 直连 IP" },
      { "rule_set": ["telegramip"], "outbound": "📲 电报消息" },
      { "rule_set": ["emby"], "outbound": "❤️ Emby公益服" }
    ],
    "rule_set": [
      {
        "tag": "fakeip-filter",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/fakeip-filter.srs"
      },
      {
        "tag": "ads",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/category-ads-all.srs"
      },
      {
        "tag": "applications",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/applications.srs"
      },
      {
        "tag": "private",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/private.srs"
      },
      {
        "tag": "microsoft-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/microsoft-cn.srs"
      },
      {
        "tag": "apple-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/apple-cn.srs"
      },
      {
        "tag": "google-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/google-cn.srs"
      },
      {
        "tag": "games-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/games-cn.srs"
      },
      {
        "tag": "netflix",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/netflix.srs"
      },
      {
        "tag": "disney",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/disney.srs"
      },
      {
        "tag": "youtube",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/youtube.srs"
      },
      {
        "tag": "tiktok",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/tiktok.srs"
      },
      {
        "tag": "bilibili",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/bilibili.srs"
      },
      {
        "tag": "ai",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/ai.srs"
      },
      {
        "tag": "networktest",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/networktest.srs"
      },
      {
        "tag": "proxy",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/proxy.srs"
      },
      {
        "tag": "cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/cn.srs"
      },
      {
        "tag": "netflixip",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/netflix-ip.srs"
      },
      {
        "tag": "telegramip",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/telegram-ip.srs"
      },
      {
        "tag": "privateip",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/private-ip.srs"
      },
      {
        "tag": "cnip",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/cn-ip.srs"
      },
      {
        "tag": "emby",
        "type": "remote",
        "format": "source",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-box-ruleset/ruleset/emby.json"
      }
    ]
  }
}
